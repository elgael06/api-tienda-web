{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { insert } from \"../../../database\";\nexport default (async (req, res) => {\n  if (req.method == 'POST') {\n    const {\n      nombre,\n      apPat,\n      apMat,\n      puesto = 0\n    } = JSON.parse(req.body);\n    console.log('body :', req.body);\n    console.log('listo', nombre, apPat, apMat, puesto);\n    const value = await (await insert()).newUsuario(nombre, apPat, apMat, puesto);\n    res.json(_objectSpread({}, value));\n  } else res.json(\"metodo no accesible.\");\n});","map":{"version":3,"sources":["/home/gael/development/web/backend/nextJS/api-tienda-web/pages/api/usuario/addUsuario.ts"],"names":["insert","req","res","method","nombre","apPat","apMat","puesto","JSON","parse","body","console","log","value","newUsuario","json"],"mappings":";;;;;;AACA,SAASA,MAAT,QAAuB,mBAAvB;AASA,gBAAe,OAAOC,GAAP,EAA0BC,GAA1B,KAAgD;AAC3D,MAAGD,GAAG,CAACE,MAAJ,IAAY,MAAf,EAAsB;AAClB,UAAM;AAACC,MAAAA,MAAD;AAASC,MAAAA,KAAT;AAAeC,MAAAA,KAAf;AAAqBC,MAAAA,MAAM,GAAC;AAA5B,QAA8CC,IAAI,CAACC,KAAL,CAAWR,GAAG,CAACS,IAAf,CAApD;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBX,GAAG,CAACS,IAAzB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBR,MAApB,EAA4BC,KAA5B,EAAkCC,KAAlC,EAAwCC,MAAxC;AACA,UAAMM,KAAK,GAAG,MAAM,CAAC,MAAMb,MAAM,EAAb,EAAiBc,UAAjB,CAA4BV,MAA5B,EAAoCC,KAApC,EAA0CC,KAA1C,EAAgDC,MAAhD,CAApB;AACAL,IAAAA,GAAG,CAACa,IAAJ,mBAAcF,KAAd;AACH,GAND,MAQIX,GAAG,CAACa,IAAJ,CAAS,sBAAT;AACP,CAVD","sourcesContent":["import { NextApiRequest, NextApiResponse } from \"next\";\nimport { insert } from \"../../../database\";\n\ninterface modelUsuario {\n    nombre:string, \n    apPat:string,\n    apMat:string,\n    puesto:number\n}\n\nexport default async (req:NextApiRequest,res:NextApiResponse)=>{\n    if(req.method=='POST'){\n        const {nombre, apPat,apMat,puesto=0}:modelUsuario = JSON.parse(req.body);\n        console.log('body :',req.body)\n        console.log('listo',nombre, apPat,apMat,puesto);\n        const value = await (await insert()).newUsuario(nombre, apPat,apMat,puesto);\n        res.json( {...value});\n    }\n    else \n        res.json(\"metodo no accesible.\");\n}"]},"metadata":{},"sourceType":"module"}