{"ast":null,"code":"import { defaultDB } from \".\";\nexport default (async () => ({\n  db: await defaultDB(),\n\n  //empresa\n  async allEmpresar() {\n    try {\n      const empresas = (await this.db.all('SELECT * FROM Empresa').catch(() => [])) || [];\n      this.db.close();\n      return {\n        error: false,\n        data: empresas\n      };\n    } catch (e) {\n      return {\n        error: true,\n        message: e.toString()\n      };\n    }\n  },\n\n  async idEmpresa(id) {\n    const empresa = await this.db.get('SELECT * FROM Empresa where id=?', [id]);\n    this.db.close();\n    return empresa || null;\n  },\n\n  //usuario\n  async allUsuario() {\n    try {\n      const usuarios = (await this.db.all('SELECT * FROM Usuarios').catch(() => [])) || [];\n      this.db.close();\n      return {\n        error: false,\n        data: usuarios\n      };\n    } catch (e) {\n      return {\n        error: true,\n        message: e.toString()\n      };\n    }\n  },\n\n  async idUsuario(id) {\n    try {\n      const usuario = (await this.db.get('SELECT * FROM Usuarios where id=?', [id]).catch(() => [])) || [];\n      this.db.close();\n      return {\n        error: false,\n        data: usuario\n      };\n    } catch (e) {\n      return {\n        error: true,\n        message: e.toString()\n      };\n    }\n  }\n\n}));","map":{"version":3,"sources":["/home/gael/development/web/backend/nextJS/api-tienda-web/database/select.ts"],"names":["defaultDB","db","allEmpresar","empresas","all","catch","close","error","data","e","message","toString","idEmpresa","id","empresa","get","allUsuario","usuarios","idUsuario","usuario"],"mappings":"AAAA,SAASA,SAAT,QAA0B,GAA1B;AAEA,gBAAe,aAAW;AACtBC,EAAAA,EAAE,EAAE,MAAMD,SAAS,EADG;;AAEtB;AACA,QAAME,WAAN,GAAmB;AACf,QAAG;AACC,YAAMC,QAAQ,GAAG,OAAM,KAAKF,EAAL,CAAQG,GAAR,CAAY,uBAAZ,EAClBC,KADkB,CACZ,MAAI,EADQ,CAAN,KACK,EADtB;AAEA,WAAKJ,EAAL,CAAQK,KAAR;AACA,aAAO;AAACC,QAAAA,KAAK,EAAC,KAAP;AAAaC,QAAAA,IAAI,EAACL;AAAlB,OAAP;AACH,KALD,CAKC,OAAMM,CAAN,EAAQ;AACL,aAAO;AAACF,QAAAA,KAAK,EAAC,IAAP;AAAYG,QAAAA,OAAO,EAACD,CAAC,CAACE,QAAF;AAApB,OAAP;AACH;AACJ,GAZqB;;AAatB,QAAMC,SAAN,CAAgBC,EAAhB,EAA0B;AACtB,UAAMC,OAAO,GAAI,MAAM,KAAKb,EAAL,CAAQc,GAAR,CAAY,kCAAZ,EAA+C,CAACF,EAAD,CAA/C,CAAvB;AACA,SAAKZ,EAAL,CAAQK,KAAR;AACA,WAAOQ,OAAO,IAAI,IAAlB;AACH,GAjBqB;;AAkBtB;AACA,QAAME,UAAN,GAAkB;AACd,QAAG;AACC,YAAMC,QAAQ,GAAG,OAAM,KAAKhB,EAAL,CAAQG,GAAR,CAAY,wBAAZ,EAClBC,KADkB,CACZ,MAAI,EADQ,CAAN,KACK,EADtB;AAEA,WAAKJ,EAAL,CAAQK,KAAR;AACA,aAAO;AAACC,QAAAA,KAAK,EAAC,KAAP;AAAaC,QAAAA,IAAI,EAACS;AAAlB,OAAP;AAEH,KAND,CAMC,OAAMR,CAAN,EAAQ;AACL,aAAO;AAACF,QAAAA,KAAK,EAAC,IAAP;AAAYG,QAAAA,OAAO,EAACD,CAAC,CAACE,QAAF;AAApB,OAAP;AACH;AACJ,GA7BqB;;AA8BtB,QAAMO,SAAN,CAAgBL,EAAhB,EAA0B;AACtB,QAAG;AACC,YAAMM,OAAO,GAAG,OAAM,KAAKlB,EAAL,CAAQc,GAAR,CAAY,mCAAZ,EAAgD,CAACF,EAAD,CAAhD,EACjBR,KADiB,CACX,MAAI,EADO,CAAN,KACM,EADtB;AAEA,WAAKJ,EAAL,CAAQK,KAAR;AACA,aAAO;AAACC,QAAAA,KAAK,EAAC,KAAP;AAAaC,QAAAA,IAAI,EAACW;AAAlB,OAAP;AACH,KALD,CAKC,OAAMV,CAAN,EAAQ;AACL,aAAO;AAACF,QAAAA,KAAK,EAAC,IAAP;AAAYG,QAAAA,OAAO,EAACD,CAAC,CAACE,QAAF;AAApB,OAAP;AACH;AACJ;;AAvCqB,CAAX,CAAf","sourcesContent":["import { defaultDB } from \".\";\n\nexport default async ()=>({\n    db: await defaultDB(),\n    //empresa\n    async allEmpresar(){\n        try{\n            const empresas = await this.db.all('SELECT * FROM Empresa')\n                .catch(()=>[]) || [];\n            this.db.close();\n            return {error:false,data:empresas};\n        }catch(e){\n            return {error:true,message:e.toString()};\n        }\n    },\n    async idEmpresa(id:number){\n        const empresa =  await this.db.get('SELECT * FROM Empresa where id=?',[id]);\n        this.db.close();\n        return empresa || null;\n    },\n    //usuario\n    async allUsuario(){\n        try{\n            const usuarios = await this.db.all('SELECT * FROM Usuarios')\n                .catch(()=>[]) || [];\n            this.db.close();\n            return {error:false,data:usuarios};\n\n        }catch(e){\n            return {error:true,message:e.toString()};\n        }\n    },\n    async idUsuario(id:number){\n        try{\n            const usuario = await this.db.get('SELECT * FROM Usuarios where id=?',[id])\n                .catch(()=>[]) || [];\n            this.db.close();\n            return {error:false,data:usuario};\n        }catch(e){\n            return {error:true,message:e.toString()};\n        }\n    }\n\n});\n"]},"metadata":{},"sourceType":"module"}