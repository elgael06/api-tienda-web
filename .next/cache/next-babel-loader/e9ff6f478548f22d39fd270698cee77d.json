{"ast":null,"code":"import sqlite from 'sqlite';\nimport { dirDB } from './';\nexport default (async () => ({\n  db: await sqlite.open(dirDB),\n\n  async existTable() {\n    await this.db.run(`CREATE TABLE IF NOT EXISTS  Empresa (\n            id INTEGER PRIMARY KEY AUTOINCREMENT,\n            nombre TEXT,\n            telefono TEXT,\n            direccion TEXT\n        )`);\n    await this.db.run(`CREATE TABLE IF NOT EXISTS  Usuarios (\n            id INTEGER PRIMARY KEY AUTOINCREMENT,\n            nombre TEXT,\n            apPaterno TEXT,\n            apMaterno TEXT,    \n            puesto int        \n        )`);\n    this.db.close();\n  },\n\n  async newEmpresa(nombre, telefono, direccion) {\n    this.existTable();\n    const res = await this.db.run('INSERT INTO Empresa (nombre, telefono, direccion) values(?,?,?)', [nombre, telefono, direccion]);\n    this.db.close();\n    console.log('listo', res);\n    return res;\n  },\n\n  async newUsuario(nombre, apPaterno, apMaterno, puesto) {\n    this.existTable();\n    const res = await this.db.run('INSERT INTO Usuarios (nombre, apPaterno, apMaterno, apMaterno, puesto) values(????)', [nombre, apMaterno, apPaterno, puesto]);\n    this.db.close();\n    console.log('listo', res);\n    return res;\n  }\n\n}));","map":{"version":3,"sources":["/home/gael/development/web/backend/nextJS/api-tienda-web/database/insert.ts"],"names":["sqlite","dirDB","db","open","existTable","run","close","newEmpresa","nombre","telefono","direccion","res","console","log","newUsuario","apPaterno","apMaterno","puesto"],"mappings":"AAAA,OAAOA,MAAP,MAAoB,QAApB;AACA,SAASC,KAAT,QAAsB,IAAtB;AAEA,gBAAe,aAAa;AACxBC,EAAAA,EAAE,EAAG,MAAMF,MAAM,CAACG,IAAP,CAAYF,KAAZ,CADa;;AAExB,QAAMG,UAAN,GAAkB;AACd,UAAM,KAAKF,EAAL,CAAQG,GAAR,CAAa;;;;;UAAb,CAAN;AAMA,UAAM,KAAKH,EAAL,CAAQG,GAAR,CAAa;;;;;;UAAb,CAAN;AAOA,SAAKH,EAAL,CAAQI,KAAR;AACH,GAjBuB;;AAkBxB,QAAMC,UAAN,CACIC,MADJ,EAEIC,QAFJ,EAGIC,SAHJ,EAIC;AACG,SAAKN,UAAL;AACA,UAAMO,GAAG,GAAG,MAAM,KAAKT,EAAL,CAAQG,GAAR,CAAY,iEAAZ,EAA8E,CAACG,MAAD,EAASC,QAAT,EAAmBC,SAAnB,CAA9E,CAAlB;AACA,SAAKR,EAAL,CAAQI,KAAR;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBF,GAApB;AACA,WAAOA,GAAP;AACH,GA5BuB;;AA6BxB,QAAMG,UAAN,CACIN,MADJ,EAEIO,SAFJ,EAGIC,SAHJ,EAIIC,MAJJ,EAKC;AAEG,SAAKb,UAAL;AACA,UAAMO,GAAG,GAAG,MAAM,KAAKT,EAAL,CAAQG,GAAR,CAAY,qFAAZ,EACd,CAACG,MAAD,EAAQQ,SAAR,EAAkBD,SAAlB,EAA4BE,MAA5B,CADc,CAAlB;AAEA,SAAKf,EAAL,CAAQI,KAAR;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBF,GAApB;AACA,WAAOA,GAAP;AACH;;AA1CuB,CAAb,CAAf","sourcesContent":["import sqlite  from 'sqlite';\nimport { dirDB } from './'\n\nexport default async () => ({\n    db : await sqlite.open(dirDB),\n    async existTable(){\n        await this.db.run(`CREATE TABLE IF NOT EXISTS  Empresa (\n            id INTEGER PRIMARY KEY AUTOINCREMENT,\n            nombre TEXT,\n            telefono TEXT,\n            direccion TEXT\n        )`);\n        await this.db.run(`CREATE TABLE IF NOT EXISTS  Usuarios (\n            id INTEGER PRIMARY KEY AUTOINCREMENT,\n            nombre TEXT,\n            apPaterno TEXT,\n            apMaterno TEXT,    \n            puesto int        \n        )`);\n        this.db.close();\n    },\n    async newEmpresa(\n        nombre      : String,\n        telefono    : String,\n        direccion   : String\n    ){\n        this.existTable();\n        const res = await this.db.run('INSERT INTO Empresa (nombre, telefono, direccion) values(?,?,?)',[nombre, telefono, direccion]);\n        this.db.close();\n        console.log('listo',res);\n        return res;\n    },\n    async newUsuario(\n        nombre:String,\n        apPaterno: String,\n        apMaterno: String,\n        puesto:Int16Array\n    ){\n\n        this.existTable();\n        const res = await this.db.run('INSERT INTO Usuarios (nombre, apPaterno, apMaterno, apMaterno, puesto) values(????)',\n            [nombre,apMaterno,apPaterno,puesto]);\n        this.db.close();\n        console.log('listo',res);\n        return res;\n    }\n});\n\n"]},"metadata":{},"sourceType":"module"}