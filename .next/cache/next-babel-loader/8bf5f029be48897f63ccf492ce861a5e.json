{"ast":null,"code":"import { defaultDB } from \".\";\nexport default (async () => ({\n  async existTable() {\n    await defaultDB.run(`CREATE TABLE IF NOT EXISTS  Empresa (\n            id INTEGER PRIMARY KEY AUTOINCREMENT,\n            nombre TEXT,\n            telefono TEXT,\n            direccion TEXT\n        )`);\n    await defaultDB.run(`CREATE TABLE IF NOT EXISTS  Usuarios (\n            id INTEGER PRIMARY KEY AUTOINCREMENT,\n            nombre TEXT,\n            apPaterno TEXT,\n            apMaterno TEXT,    \n            puesto int        \n        )`);\n    defaultDB.close();\n  },\n\n  async newEmpresa(nombre, telefono, direccion) {\n    this.existTable();\n    const res = await defaultDB.run('INSERT INTO Empresa (nombre, telefono, direccion) values(?,?,?)', [nombre, telefono, direccion]);\n    defaultDB.close();\n    console.log('listo', res);\n    return res;\n  },\n\n  async newUsuario(nombre, apPaterno, apMaterno, puesto) {\n    this.existTable();\n    const res = await defaultDB.run('INSERT INTO Usuarios (nombre, apPaterno, apMaterno, apMaterno, puesto) values(????)', [nombre, apMaterno, apPaterno, puesto]);\n    defaultDB.close();\n    console.log('listo', res);\n    return res;\n  }\n\n}));","map":{"version":3,"sources":["/home/gael/development/web/backend/nextJS/api-tienda-web/database/insert.ts"],"names":["defaultDB","existTable","run","close","newEmpresa","nombre","telefono","direccion","res","console","log","newUsuario","apPaterno","apMaterno","puesto"],"mappings":"AAAA,SAASA,SAAT,QAA0B,GAA1B;AAEA,gBAAe,aAAa;AACxB,QAAMC,UAAN,GAAkB;AACd,UAAMD,SAAS,CAACE,GAAV,CAAe;;;;;UAAf,CAAN;AAMA,UAAMF,SAAS,CAACE,GAAV,CAAe;;;;;;UAAf,CAAN;AAOAF,IAAAA,SAAS,CAACG,KAAV;AACH,GAhBuB;;AAiBxB,QAAMC,UAAN,CACIC,MADJ,EAEIC,QAFJ,EAGIC,SAHJ,EAIC;AACG,SAAKN,UAAL;AACA,UAAMO,GAAG,GAAG,MAAMR,SAAS,CAACE,GAAV,CAAc,iEAAd,EAAgF,CAACG,MAAD,EAASC,QAAT,EAAmBC,SAAnB,CAAhF,CAAlB;AACAP,IAAAA,SAAS,CAACG,KAAV;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBF,GAApB;AACA,WAAOA,GAAP;AACH,GA3BuB;;AA4BxB,QAAMG,UAAN,CACIN,MADJ,EAEIO,SAFJ,EAGIC,SAHJ,EAIIC,MAJJ,EAKC;AAEG,SAAKb,UAAL;AACA,UAAMO,GAAG,GAAG,MAAMR,SAAS,CAACE,GAAV,CAAc,qFAAd,EACd,CAACG,MAAD,EAAQQ,SAAR,EAAkBD,SAAlB,EAA4BE,MAA5B,CADc,CAAlB;AAEAd,IAAAA,SAAS,CAACG,KAAV;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBF,GAApB;AACA,WAAOA,GAAP;AACH;;AAzCuB,CAAb,CAAf","sourcesContent":["import { defaultDB } from \".\";\n\nexport default async () => ({\n    async existTable(){\n        await defaultDB.run(`CREATE TABLE IF NOT EXISTS  Empresa (\n            id INTEGER PRIMARY KEY AUTOINCREMENT,\n            nombre TEXT,\n            telefono TEXT,\n            direccion TEXT\n        )`);\n        await defaultDB.run(`CREATE TABLE IF NOT EXISTS  Usuarios (\n            id INTEGER PRIMARY KEY AUTOINCREMENT,\n            nombre TEXT,\n            apPaterno TEXT,\n            apMaterno TEXT,    \n            puesto int        \n        )`);\n        defaultDB.close();\n    },\n    async newEmpresa(\n        nombre      : String,\n        telefono    : String,\n        direccion   : String\n    ){\n        this.existTable();\n        const res = await defaultDB.run('INSERT INTO Empresa (nombre, telefono, direccion) values(?,?,?)',[nombre, telefono, direccion]);\n        defaultDB.close();\n        console.log('listo',res);\n        return res;\n    },\n    async newUsuario(\n        nombre:String,\n        apPaterno: String,\n        apMaterno: String,\n        puesto:Int16Array\n    ){\n\n        this.existTable();\n        const res = await defaultDB.run('INSERT INTO Usuarios (nombre, apPaterno, apMaterno, apMaterno, puesto) values(????)',\n            [nombre,apMaterno,apPaterno,puesto]);\n        defaultDB.close();\n        console.log('listo',res);\n        return res;\n    }\n});\n\n"]},"metadata":{},"sourceType":"module"}